#ifndef LLVM_LIB_TARGET_Koda_KodaSUBTARGET_H
#define LLVM_LIB_TARGET_Koda_KodaSUBTARGET_H

#include "KodaFrameLowering.h"
#include "KodaISelLowering.h"
#include "KodaInstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "MCTargetDesc/KodaInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "KodaGenSubtargetInfo.inc"

namespace llvm {

class StringRef;
class TargetMachine;

class KodaSubtarget : public KodaGenSubtargetInfo {
  virtual void anchor();

  KodaRegisterInfo RegInfo;
  KodaInstrInfo InstrInfo;
  KodaFrameLowering FrameLowering;
  KodaTargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;
  KodaABI::ABI TargetABI = KodaABI::ABI_ILP32;
  MVT XLenVT = MVT::i32;
  unsigned XLen = 32;

public:
  KodaSubtarget(const Triple &TT, const std::string &CPU, const std::string &FS,
                const TargetMachine &TM);

  /// Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

  const KodaInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const KodaFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const KodaTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const KodaRegisterInfo *getRegisterInfo() const override { return &RegInfo; }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }

  auto getTargetABI() const { return TargetABI; }
  auto getXLenVT() const { return XLenVT; }
  auto getXLen() const { return XLen; }
};

} // end namespace llvm

#endif // LLVM_LIB_TARGET_Koda_KodaSUBTARGET_H